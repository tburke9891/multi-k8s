sudo: required
services:
  - docker
env:
  global:
  # get the SHA from the most recent commit
  - SHA=$(git rev-parse HEAD)
  # do not show prompts for user input
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
  # decrypt service account file to call later with gcloud auth
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  # install google cloud sdk
  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
    rm -rf $HOME/google-cloud-sdk;
    curl https://sdk.cloud.google.com | bash > /dev/null;
    fi
  # - curl https://sdk.cloud.google.com | bash > /dev/null;
  # - source $HOME/google-cloud-sdk/path.bash.inc
  # install and update kubectl and python in travis
  - gcloud components update kubectl
  # authenticate to google
  - gcloud auth activate-service-account --key-file service-account.json
  # set the project and zone
  - gcloud config set project multi-k8s-410619
  - gcloud config set compute/zone us-east1-c
  - gcloud container clusters get-credentials multi-cluster
  # store DOCKER_PASSWORD and DOCKER_USERNAME in travis and call it here
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # build a test image from the client folder to scan against
  - docker build -t thomasburke9891/react-test -f client/Dockerfile.dev ./client

script:
  # add -e CI=true so the code actually exits
  - docker run -e CI=true thomasburke9891/react-test npm test

deploy:
  # deploy with a script that we specify when we update the master branch
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master